{{~
    set_name('FB_MTP_' + mtp_procedure.name)  
    set_folder('POUs/MTP/' + mtp_service.name + '/Procedures')
~}}
<pou name="FB_MTP_{{ mtp_procedure.name }}" pouType="functionBlock">
  <interface>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/pouinheritance" handleUnknown="implementation">
        <Inheritance>
          <Extends>FB_MTP_Procedure&lt;cProcParameter_{{ mtp_procedure.name }}, cRequiredEquipment_{{ mtp_procedure.name }}&gt;</Extends>
        </Inheritance>
      </data>
      <data name="http://www.3s-software.com/plcopenxml/genericVars" handleUnknown="implementation">
        <genericVars constant="true">
          <variable name="cProcParameter_{{ mtp_procedure.name }}">
            <type><UINT /></type>
            <initialValue><simpleValue value="1" /></initialValue>
          </variable>
          <variable name="cRequiredEquipment_{{ mtp_procedure.name }}">
            <type><UINT /></type>
            <initialValue><simpleValue value="1" /></initialValue>
          </variable>
        </genericVars>
      </data>
    </addData>
    <documentation>
      <xhtml xmlns="http://www.w3.org/1999/xhtml"> ************************************************************************
* This file was automatically generated by TwinCAT 3 MTP Engineering   *
* and then subsequently overwritten by ACCELEER DesignOps              *
*                                                                      *
* DO NOT change this file, changes will be lost during the next        *
* code generation                                                      *
*                                                                      *
* Generated on:                                                        *
* Template based on:                                                   *
* TwinCAT 3 MTP Engineering Version: 0.9.16.0                          *
************************************************************************</xhtml>
    </documentation>
  </interface>
  <body>
    <ST>
      <xhtml xmlns="http://www.w3.org/1999/xhtml" >
        <![CDATA[
// Copy the MTP Service Parameters to the connected Phase Instance
{{~ for parameter_link in mtp_procedure.parameter_links ~}}
PhaseInstances.{{ mtp_procedure.phase_instance.name }}.{{ parameter_link.phase_instance_var_name }} := {{ mtp_service.name }}.{{ parameter_link.mtp_parameter_name }}.VExt;
{{~ end ~}}
        ]]>
      </xhtml>
    </ST>
  </body>
  <addData>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Aborted">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Aborted:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Aborted();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Aborting">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Aborting:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Aborting();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Completed">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Completed:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Completed();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Completing">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Completing:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Completing();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Execute">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Execute:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Execute();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Held">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Held:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Held();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Holding">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Holding:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Holding();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Paused">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
ServiceA.SetProcParamApplyEn(ApplyEn := TRUE, SyncOnly := TRUE); // TODO: clarify why this is needed

// pass the method call to the PhaseLogic of the PhaseInstance
Paused:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Paused();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Pausing">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Pausing:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Paused();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Resetting">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Resetting:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Resetting();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Resuming">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Resuming:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Resuming();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Starting">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// Beckhoff MTP standard code.
// TODO: explain why this is needed
ServiceA.SetProcParamApplyEn(ApplyEn := FALSE, SyncOnly := TRUE);
ServiceA.SetConfigParamApplyEn(ApplyEn := FALSE, SyncOnly := TRUE);

SetReqEqAutomatic();
SetReqEqInternal();

//Starting := IsReqEqAutomatic() AND IsReqEqInternal();

// pass the method call to the PhaseLogic of the PhaseInstance
Starting:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Completed() AND IsReqEqAutomatic() AND IsReqEqInternal();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Stopped">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Stopped:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Stopped();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Stopping">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Resuming:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Resuming();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

    <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
      <Method name="Unholding">
        <interface><returnType><BOOL /></returnType></interface>
        <body>
          <ST>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
// pass the method call to the PhaseLogic of the PhaseInstance
Unholding:= PhaseInstances.{{ mtp_procedure.phase_instance.name }}.MTP_Unholding();
            </xhtml>
          </ST>
        </body>
      </Method>
    </data>

  </addData>
</pou>